주석을 사용하는 이유: 코드에 대한 설명을 할 때
//주석: 컴파일러가 읽지 않는다.
주석의 종류는 '//'를 사용하고 문장을 쓴다. 다만 긴주석의 경우 /* */범주로 표현하면 사이는 전부 주석처리가 된다.


//출력함수 print(),println(),printf()
이중 println(); : print line이란 의미로  줄 바꿔 출력

이렇게 함수 자체에서 띄어쓰기를 하지 않고 내부에서 띄어쓰기를 원할 경우 개행문자를 사용하는데 이는 다음과 같다.
개행문자(제어문자): 항상 큰 따움표 안에 쓴다.
//\n: 줄바꿈(line의 약자 n)
//\t: 위아래 간격맞춤 (tap)
ex) System.out.print("다음행\n");


변수에 대해 알아보자. 
변수: 저장공간
               x                  =                 0                ;
저장공간의 이름      대입연산자    상수,값    끝난거의 의미
변수명

==  : 같다.
저장공간의 고유한 값: 주소값
저장공간을 선언하면 RAM에 주소가 생김
java에서는 jvm이 주소를 찾아가는 역할을 해줌


RAM (4G)
                                                                  높은주소
OS Kernel space       (1G)                             
                                                               
stack  지역변수, 매개변수                            
ㅜ

free영역
                                                                          
ㅗ                                                                      (3G)
heap  동적할당

bss 초기화되지 않은 변수

data 전역변수, static변수

text 상수
                                                                낮은 주소


 저장공간의 종류: 자료형 (type)

자료형의 종류
논리형: boolean 1byte               true,false
정수형: short   2byte                  1S, 2S
            int       4byte   (기본형)   1,4,21억
            long    8byte		1L, 4L, 25억L

실수형: float    4byte		0.9F, 8.5F
           double 8byte  (기본형)    0.9, 8.7
문자형: char   2byte   '1', 'a', 'b'
-------------------------------

문자열: String(클래스)  "1", "a", "b", "abc"

(기본형이 아니면 표시를 해줘야함)
ex) long y=10L;
float data=0.9F
앞글자가 대문자면 클래스

변수의 선언

선언 및 초기화
	자료명 변수명 = 값;
선언 후 초기화	
	자료형 변수명;
	변수명=값;

변수의 사용: 변수명으로 사용

아스키 코드: 문자를 서수로 표현하는 방식
문자를 정수형태로 저장하는 컴퓨터 특성상 연산기호를 만나면 정수로 바뀌어서 계산된다.



앞글자가 대문자면서 검정색이면 클래스
System.out.printin()의 경우 syso입력하고 control+space
control+f11: 컨파일
tap:들여쓰기
control+space: 자동완성
control+alt+방향키 위or아래: 윗문장 그대로 복사
alt+방향키 위or아래: 문장을 이동